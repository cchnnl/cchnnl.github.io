{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["IndexPage","data","frontmatter","index","edges","node","seoTitle","useSeoTitleSuffix","globalState","isIntroDone","useSplashScreen","darkMode","initialState","content","navlinks","title","seoTitleSuffix","hero","about","interests","projects","contact","pageQuery"],"mappings":"4FAAA,sLAqDeA,UAtCG,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACXC,EAAgBD,EAAKE,MAAMC,MAAM,GAAGC,KAApCH,YACAI,EAAiDJ,EAAjDI,SAAUC,EAAuCL,EAAvCK,kBAEZC,EAAc,CAElBC,aAJuDP,EAApBQ,gBAOnCC,UAAU,GAGZ,OACE,kBAAC,IAAD,CAAqBC,aAAcJ,GACjC,kBAAC,IAAD,CAAQK,QAASZ,EAAKa,SAASV,OAC7B,kBAAC,IAAD,CACEW,MACER,EACOD,EADU,MACIU,iBADJ,GAEVV,IAGX,kBAAC,IAAD,CAAMO,QAASZ,EAAKgB,KAAKb,QAGzB,kBAAC,IAAD,CAAOS,QAASZ,EAAKiB,MAAMd,QAC3B,kBAAC,IAAD,CAAWS,QAASZ,EAAKkB,UAAUf,QACnC,kBAAC,IAAD,CAAUS,QAASZ,EAAKmB,SAAShB,QACjC,kBAAC,IAAD,CAASS,QAASZ,EAAKoB,QAAQjB,WAYhC,IAAMkB,EAAS","file":"component---src-pages-index-js-299688dd4a8290017ae0.js","sourcesContent":["import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { graphql } from \"gatsby\"\r\n\r\nimport GlobalStateProvider from \"../context/provider\"\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport Hero from \"../components/sections/hero\"\r\n// import Articles from \"../components/sections/articles\"\r\nimport About from \"../components/sections/about\"\r\nimport Interests from \"../components/sections/interests\"\r\nimport Projects from \"../components/sections/projects\"\r\nimport Contact from \"../components/sections/contact\"\r\nimport { seoTitleSuffix } from \"../../config\"\r\n\r\nconst IndexPage = ({ data }) => {\r\n  const { frontmatter } = data.index.edges[0].node\r\n  const { seoTitle, useSeoTitleSuffix, useSplashScreen } = frontmatter\r\n\r\n  const globalState = {\r\n    // if useSplashScreen=false, we skip the intro by setting isIntroDone=true\r\n    isIntroDone: useSplashScreen ? false : true,\r\n    // darkMode is initially disabled, a hook inside the Layout component\r\n    // will check the user's preferences and switch to dark mode if needed\r\n    darkMode: false,\r\n  }\r\n\r\n  return (\r\n    <GlobalStateProvider initialState={globalState}>\r\n      <Layout content={data.navlinks.edges}>\r\n        <SEO\r\n          title={\r\n            useSeoTitleSuffix\r\n              ? `${seoTitle} - ${seoTitleSuffix}`\r\n              : `${seoTitle}`\r\n          }\r\n        />\r\n        <Hero content={data.hero.edges} />\r\n        {/* Articles is populated via Medium RSS Feed fetch */}\r\n        {/* <Articles /> */}\r\n        <About content={data.about.edges} />\r\n        <Interests content={data.interests.edges} />\r\n        <Projects content={data.projects.edges} />\r\n        <Contact content={data.contact.edges} />\r\n      </Layout>\r\n    </GlobalStateProvider>\r\n  )\r\n}\r\n\r\nIndexPage.propTypes = {\r\n  data: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default IndexPage\r\n\r\nexport const pageQuery = graphql`\r\n  {\r\n    navlinks: allMdx(\r\n      filter: { fileAbsolutePath: { regex: \"/index/navlinks/en/\" } }\r\n    ) {\r\n      edges {\r\n        node {\r\n          exports {\r\n            navLinks {\r\n              menu {\r\n                name\r\n                url\r\n              }\r\n              button {\r\n                name\r\n                url\r\n              }\r\n              lang {\r\n                name\r\n                url\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    index: allMdx(filter: { fileAbsolutePath: { regex: \"/index/index/\" } }) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            seoTitle\r\n            useSeoTitleSuffix\r\n            useSplashScreen\r\n          }\r\n        }\r\n      }\r\n    }\r\n    hero: allMdx(filter: { fileAbsolutePath: { regex: \"/index/hero/\" } }) {\r\n      edges {\r\n        node {\r\n          body\r\n          frontmatter {\r\n            greetings\r\n            title\r\n            subtitlePrefix\r\n            subtitle\r\n            icon {\r\n              childImageSharp {\r\n                fluid(maxWidth: 60, quality: 90) {\r\n                  ...GatsbyImageSharpFluid\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    about: allMdx(filter: { fileAbsolutePath: { regex: \"/index/about/\" } }) {\r\n      edges {\r\n        node {\r\n          body\r\n          frontmatter {\r\n            title\r\n            image {\r\n              childImageSharp {\r\n                fluid(maxWidth: 400, quality: 90) {\r\n                  ...GatsbyImageSharpFluid\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    interests: allMdx(\r\n      filter: { fileAbsolutePath: { regex: \"/index/interests/\" } }\r\n    ) {\r\n      edges {\r\n        node {\r\n          exports {\r\n            shownItems\r\n            interests {\r\n              number\r\n              icons {\r\n                childImageSharp {\r\n                  fixed(width: 35, height: 35, quality: 90) {\r\n                    ...GatsbyImageSharpFixed\r\n                  }\r\n                }\r\n              }\r\n              title\r\n              description\r\n              descriptionKOR\r\n            }\r\n          }\r\n          frontmatter {\r\n            title\r\n          }\r\n        }\r\n      }\r\n    }\r\n    projects: allMdx(\r\n      filter: {\r\n        fileAbsolutePath: { regex: \"/index/projects/en/\" }\r\n        frontmatter: { visible: { eq: true } }\r\n      }\r\n      sort: { fields: [frontmatter___position], order: ASC }\r\n    ) {\r\n      edges {\r\n        node {\r\n          body\r\n          frontmatter {\r\n            title\r\n            category\r\n            emoji\r\n            notion\r\n            external\r\n            github\r\n            screenshot {\r\n              childImageSharp {\r\n                fluid(maxWidth: 400, quality: 90) {\r\n                  ...GatsbyImageSharpFluid\r\n                }\r\n              }\r\n            }\r\n            tags\r\n            position\r\n            buttonVisible\r\n            buttonUrl\r\n            buttonText\r\n          }\r\n        }\r\n      }\r\n    }\r\n    contact: allMdx(\r\n      filter: { fileAbsolutePath: { regex: \"/index/contact/\" } }\r\n    ) {\r\n      edges {\r\n        node {\r\n          body\r\n          frontmatter {\r\n            title\r\n            name\r\n            email\r\n            profileImage {\r\n              childImageSharp {\r\n                fluid(maxWidth: 400, quality: 90) {\r\n                  ...GatsbyImageSharpFluid\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}